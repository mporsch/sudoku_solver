#include "grid_parse.h"

#include <cstdlib>
#include <sstream>

Grid ParseGrid()
{
  auto iss = std::istringstream(
R"(+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+
| 5 : 3 : 4 | 6 : 7 : 8 | 9 : 1 : 2 |
+---+---+---+---+---+---+---+---+---+
| 6 : 7 : 2 | 1 : 9 : 5 | 3 : 4 : 8 |
+---+---+---+---+---+---+---+---+---+
| 1 : 9 : 8 | 3 : 4 : 2 | 5 : 6 : 7 |
+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+
| 8 : 5 : 9 | 7 : 6 : 1 | 4 : 2 : 3 |
+---+---+---+---+---+---+---+---+---+
| 4 : 2 : 6 | 8 : 5 : 3 | 7 : 9 : 1 |
+---+---+---+---+---+---+---+---+---+
| 7 : 1 : 3 | 9 : 2 : 4 | 8 : 5 : 6 |
+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+
| 9 : 6 : 1 | 5 : 3 : 7 | 2 : 8 : 4 |
+---+---+---+---+---+---+---+---+---+
| 2 : 8 : 7 | 4 : 1 : 9 | 6 : 3 : 5 |
+---+---+---+---+---+---+---+---+---+
| 3 : 4 : 5 | 2 : 8 : 6 | 1 : 7 : 9 |
+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+~~~+)"
  );

  Grid grid;
  iss >> grid;
  return grid;
}

Grid ParseGrid6x6_3x2()
{
  auto iss = std::istringstream(
R"(+~~~+~~~+~~~+~~~+~~~+~~~+
| 1 : 2 : 6 | 3 : 4 : 5 |
+---+---+---+---+---+---+
| 5 : 3 : 4 | 2 : 1 : 6 |
+~~~+~~~+~~~+~~~+~~~+~~~+
| 6 : 4 : 1 | 5 : 3 : 2 |
+---+---+---+---+---+---+
| 2 : 5 : 3 | 4 : 6 : 1 |
+~~~+~~~+~~~+~~~+~~~+~~~+
| 3 : 1 : 5 | 6 : 2 : 4 |
+---+---+---+---+---+---+
| 4 : 6 : 2 | 1 : 5 : 3 |
+~~~+~~~+~~~+~~~+~~~+~~~+)"
  );

  Grid grid;
  iss >> grid;
  return grid;
}

Grid ReferenceGrid()
{
  return Grid{
    {5, 3, 4, 6, 7, 8, 9, 1, 2},
    {6, 7, 2, 1, 9, 5, 3, 4, 8},
    {1, 9, 8, 3, 4, 2, 5, 6, 7},
    {8, 5, 9, 7, 6, 1, 4, 2, 3},
    {4, 2, 6, 8, 5, 3, 7, 9, 1},
    {7, 1, 3, 9, 2, 4, 8, 5, 6},
    {9, 6, 1, 5, 3, 7, 2, 8, 4},
    {2, 8, 7, 4, 1, 9, 6, 3, 5},
    {3, 4, 5, 2, 8, 6, 1, 7, 9}};
}

Grid ReferenceGrid6x6_3x2()
{
  return Grid{
    {1, 2, 6, 3, 4, 5},
    {5, 3, 4, 2, 1, 6},
    {6, 4, 1, 5, 3, 2},
    {2, 5, 3, 4, 6, 1},
    {3, 1, 5, 6, 2, 4},
    {4, 6, 2, 1, 5, 3}};
}

int main()
{
  return (true
  && (ParseGrid() == ReferenceGrid())
  && (ParseGrid6x6_3x2() == ReferenceGrid6x6_3x2())
  ? EXIT_SUCCESS : EXIT_FAILURE);
}
